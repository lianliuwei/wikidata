= UULP =
= Understanding Unix/Linux Programming =
== A Guide to Theory and Practice ==
UULP就是<Unix/Linux编程实践教程>
== 任务 ==
 *写more
 *看光盘内容
 *作记录
 *将便签本的记录转移到这来
== 目标 ==
 *要把UULP的练习和章节例子都写了
 *做记录
 *理解 思想 设计
 *掌握学习方法
== 问题 ==
 *可以用open来打开目录吗，用自己来解析目录
 *dir和fd是一样的吗
 *opendir后再opendir之后dir指针会变吗 man上说的问题
 *如果一函数不想处理这异常 它还要return不是很烦吗
 *文件系统的安全模型是什么
 *使用ctime
 *为什么要在UULP 83里为什么要 4＋ctime（）
 *八进制如果出现9怎么处理
 *utime.h是什么意思
 *pwd编写
  *mount后的inode的值为1 还有好几个是不是特殊的用途
  *如何显示在不同的文件系统中跳转 就是实现了getcwd（）的功能
  *系统的pwd是如何实现的（应该是用多种方式实现的）
== 目录 ==
 *[[UULP/Unix系统编程概述|Unix系统编程概述]] 
  *有学习的形式和方法 可以用于深入的技术学习 
  *编写more
 *[[UULP/文件操作|文件操作]]
  *编写who
 *[[UULP/目录与文件属性|目录与文件属性]]
  *编写ls
== 记录 ==
 *内容 以API分
  *文件与文件系统
  *硬件
  *进程与线程
  *通信 IPC 管道 socket I/O重定向
 *程序的标准输入输出和异常是可能用于重定向用的
 *如要获得确定的输入和输出用/dev/tty
== 实验 ==
 1. sigaction 7.1
  *SA_RESTART会将中断前的数据丢掉,但中断中的数据会保存
   *bbb
   *input: bbb
   *dddd^CCalled with signal 2
   *sdfsd
   *done handling signal 2
   *input: sdfsd
   *会重新开始fgets()但是sdfsd因为没有进输入缓存所以没有掉
  *不用SA_RESTART出现
   *ddd^CCalled with signal 2
   *dfd
   *done handling signal 2
   *input: init
   *input: dfd
   *init是初始化的字符值 它是先返回
== 资源 ==
 *随书光盘
 *中文PDF
== misc ==
 UCB 就是 加州伯克利大学
 NIS 网络信息服务
 安全实现 文件系统安全 角色安全分配 有限制的特权程序 三层
== 资源 ==
 *[[http://wps.prenhall.com/esm_molay_UNIXProg_1/7/2040/522376.cw/index.html]]UULP官网
