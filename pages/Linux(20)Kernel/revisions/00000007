<<TableOfContents>>
== 构建 ==
 *处理的方面
  *按需要编译
  *自动依赖生成
  *配置
  *不同架构和交叉编译
  *可加载模块
 *使用Make技术
 *没有使用autoconf进行配置
 *配置
  *menuconfig
  *xconfig
  *gconfig
 *使用的是非递归makefile
 *Kconfig用于配置阶段 替代了旧的Config.in/Config.help
=== users 使用 ===
 *会先生成配置用的程序再进行配置
 *在scripts/kconfig/下有相应的程序
 *使用/.config作为配置文件
 *使用外来的配置文件要运行 oldconfig 进行适配
 *默认会生成bzImage或zImage
 *使用zdisk和fdimage产生磁盘可用的印象需要mtools和syslinux
 *使用本地installkernel程序安装内核
 *make modules_install 安装modules
 *重改架构需要make disclean
=== developers 使用 ===
 *make some/path/file.o 使用配置标志编译文件
 *make some/path/file.i 使用配置产生预处理文件
 *make some/path/file.lst C和汇编对应文件
 *make SUBDIRS=drivers/isdn/hisax modules 只会处理这个路径
 *增加驱动
{{{
config TIGON3
   tristate ""
   deponds on PCI
   help
       this driver....
}}}
