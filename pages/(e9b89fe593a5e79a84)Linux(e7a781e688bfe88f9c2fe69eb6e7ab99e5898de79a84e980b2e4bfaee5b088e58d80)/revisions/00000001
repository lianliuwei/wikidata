=== 架站前的進修專區 ===

 *對於網路伺服器來說最重要的是基礎檔案權限、程序之啟動關閉與管理、 Bash shell 之操作與 script 、使用者帳號的管理等等

==== 作者再版序 ====

 *需要『一貫作業程序』的，什麼是 『一貫』作業程序呢？其實就是上面所有的工作都需要 『全部一起搭配來思考』的意思，您不能單純的只想到某個比較重要的地方而已。

 *具備有 Linux 作業系統的相關知識，以及文字介面 ( BASH Shell ) 的相關技巧，還有，必需要能夠瞭解一些 Unix-Like 的工作流程，例如登錄檔的產生與放置的地點、服務的啟動與關閉方式、 工作排程的使用方法、以及其他種種相關的事項。

 * DNS 是所有伺服器能否正常工作的基礎，因此，您雖然不需要架設 DNS 伺服器，但是得瞭解 DNS 的整體運作流程

 *主要分為三大部分，分別是『網路基礎篇』、 『簡易防火措施篇』與『伺服器架設篇』，前兩篇的所有內容與『伺服器架設篇』都具有很高的相關性， 所以，您在開始伺服器的架設之前，請務必將前面兩篇共十二章先唸過一遍才好

==== 架站之前所需的技能分析 ====

 *架站容易維護難』啊！更深一層來說，『維護還好、除錯更難啊！』

 *架站之前還是有一些基本的技能需要學會的！而且這些技能是『一旦學會之後，真正是終身受用啊！』 

 *基本功課

  *該作業系統的簡易操作，以及登錄分析、帳號管理、文書編輯器的使用等等的技巧； 

  *網路的基本概念； 

  *防火牆方面的相關知識等等。

 *基本架站流程

  *瞭解網路基礎

   *硬體與設備的等級與好壞

   *TCP/IP 與封包的概念

   *路由 (route)

   *領域名稱系統 (Domain Name System, DNS )

   *各種網路設備的選擇與搭配

  *瞭解架站的目的

  *Linux 安裝硬碟規劃

  *瞭解欲架設的網站服務原理

  *服務的套件安裝、漏洞修補、套件升級

  *主機設定、啟動、觀察與除錯

   *找出設定檔

   *編輯設定檔

   *啟動伺服器

   *觀察啟動的狀態

   *設定開機啟動該伺服器

   *Server 與 Client 的權限問題

  *用戶端設定、觀察與除錯

   *教育 Client 端的使用者，正確的使用網路與主機提供的服務』就是一個相當重要的工作

  *安全性設定

   *嚴格規範使用者的密碼設定規則

   *利用 Super daemon 與 TCP Wrappers 管理服務權限

   *利用 netfilter 防火牆

   *持續進行套件修補

  *服務日誌、登錄檔與備份管理

 *定位在已經具有 Linux 知識的朋友的工具書

 *自我評估是否已經具有架站的能力

  *如何維護一個網站的安全

  *是否具有 Linux 的基礎概念

  *是否具備基礎網路知識

  *是否已經身心活化了

  *是否具有道德感與責任感

==== 網路基礎概念 ====

 *網路(Network)

  *如果沒有一些網路基礎方面的認知的話，那麼在 Linux 上面設定網路或者是進行網路除錯將是您一生當中最大的夢魘

  *熟悉 Linux 操作與 Linux 基礎

  *花幾晚的時間將網路基礎看一看

  *隨時掌握主機資訊

  *什麼是網路 看书

  *乙太網路

   *整個網路世界並非僅有乙太網路這個硬體介面

   *早先 IEEE 所制訂的乙太網路標準為 802.3 的 IEEE 10BASE5 后制訂 10BASE-T 的標準 後來更制訂了 802.3u 這個支援到 100Mbps 傳輸速度的 100BASE-T 標準

   *目前在乙太網路上最常見到的接頭就是 RJ-45 的網路接頭

   * RJ-45 接頭网线 看书

   *為了杜絕這種訊號碰撞產生的問題，乙太網路使用一種名為 CSMA/CD (Carrier-Sense Multiple Access with Collision Detection) 的技術

   *以 MAC (Media Access Control, 媒體存取控制)來管理資料傳送

   *MAC地址介绍 看书

   *目前的 Gigabit Ethernet 通常都已經支援大的訊框架構，那就是 Jumbo Frame

   *一些常見的乙太網路技術

    *自動協調速度機制

    *Auto MDI/MDIX

   *結構化佈線

  *OSI 七層協定

 *IP 與 MAC 看书

  * 傳輸單位與 MAC

  * IP 的組成

  * 網域的概念與 IP 的分級

  * Netmask 的用途與子網路的切分

  * IP 的種類與取得方式

   *內部迴圈網路 127.0.0.0/8 這個 A Class 

   *Public IP 

   *Private IP

  * IP 封包的表頭

 *網路層之路由概念

  *路徑選擇 (routing) 

  *每部主機都有自己的路由表

  *Gateway / Router ：網關/路由器的功能就是在負責不同網域之間的封包轉遞 ( IP Forwarder )

  *Internet 上面的路由協定與變化是相當複雜的，因為 Internet 上面的路由並不是靜態的，他可以隨時因為環境的變化而修訂每個封包的傳送方向。

  *觀察主機的路由

   *route [-n]

 *常見的通訊協定

  *TCP 協定

   *TCP 封包 看书

   *通訊埠口與 Socket 

    *各網路服務與 port number 的對應預設給他寫在 /etc/services 檔案內

    *小於 1023 以下的埠口要啟動時， 啟動者的身份必須要是 root 才行

    *Socket Pair ( 成對的端口 )

   *封包的傳送

    *三向交握(Three-way handshake)

    *『網路是雙向的』所以不論是伺服器端還是用戶端，都必須要透過一次 SYN 與 ACK 來建立連線， 所以總共會進行三次的交談

    *設定防火牆或者是追蹤網路連線的問題時，這個『雙向』的概念最容易被忽略

  *UDP 協定

   *『User Datagram Protocol, 用戶資料流協定』

   * UDP 封包由於不需要確認對方是否有正確的收到資料

   *很多的軟體其實是同時提供 TCP 與 UDP 的傳輸協定

  *ICMP 協定

   *『 Internet Control Message Protocol, 網際網路訊息控制協定 』

   *最簡單的指令 ping 與 traceroute利用 ICMP 來檢驗網路的狀態

  *MTU 的限制

   *最大傳輸單元 (Maximum Transmission Unit, MTU)

   *不論您的網路媒體支援 MTU 到多大，您必須要考量到您的封包需要傳到目的地時， 所需要經過的所有網路媒體，然後再來決定您的 MTU 設定才行

   *MTU 就會比標準乙太網路容量的 1500 小一些

 *連上 Internet 前的準備事項

  *什麼是主機名稱與 DNS

   * Domain Name System (DNS)

   *DNS 服務的最大功能就是在進行『主機名稱與該主機的 IP 的對應』

   *DNS 主機 IP 的設定在 /etc/resolv.conf

  *一組可以連上 Internet 的必要網路參數

   *IP 

   *Netmask 

   *Network 

   *Broadcast 

   *Gateway 

   *DNS 

==== 區域網路架構簡介與 Linux 版本選擇 ====

 *區域網路的連線

  *什麼是區域網路

  *區域網路的佈線規劃

   *Linux 主機直接連到 Internet 的環境

    *讓 Linux 與一般 PC 在同等地位

    *讓 Linux 與一般 PC 分開

    *讓 Linux 直接管理 LAN

   *Linux 主機放在 LAN 裡面

  *網路媒體選購建議 看书

  *內部連線的網路參數與通訊協定

   *一張網路卡可以設定多個 IP 在 Linux 當中一張網路卡可以具有一個以上的 IP 呢！由於一個 IP 即為一個網路介面，因此只要兩個網路介面 ( 不論有幾張網路卡 ) 即可進行 NAT 的設定啦

   * NetBEUI 就是一個常見的簡易通訊協定

   *在 Windows Client 系統裡面，最常見的兩個通訊協定就是 TCP/IP 以及 NetBEUI 這兩個通訊協定了

 *Linux distributions 的選擇

  *主機硬體的選擇

   *省不省電有所謂

   *虛擬化技術

  *distributions

   *多功能新鮮貨

   *強調性能穩定但軟體功能較舊的企業用途貨

 *Windows 個人電腦網路設定範例

  *在 Windows 系統上所需要的網路參數除了 IP, netmask, DNS 之外，還需要『工作群組, workgroup』與 『電腦名稱, Netbios name』此外，也可以加上 LAN 裡面很常見的 NetBIOS ( NetBEUI ) 這個通訊協定

==== 連上 Internet ====

 *Linux 連上 Internet 前的注意事項

  *Linux 的網路卡

   *如果您的網路卡是自行編譯安裝的， 那麼每次重新安裝其他版本的核心時，您都必須要自行重新手動編譯過該模組

   *編譯網路卡驅動程式 看书

   *Linux 網路相關設定檔案

    */etc/sysconfig/network 設定『主機名稱( HOSTNAME )與啟動 Network 與否』

    */etc/sysconfig/network-scripts/ifcfg-eth0 設定網路卡參數的檔案

    */etc/modprobe.conf 用來設定開機時載入核心模組的檔案

    */etc/resolv.conf 設定 DNS IP (名稱解析伺服器) 的檔案

    */etc/hosts 記錄電腦的 IP 對應主機的名稱或者主機的別名

     *在區域網路內有些服務需要反查 Client 的身份，此時就會動用到主機名稱對應 IP 的資料

    */etc/services 記錄架構在 TCP/IP 上面的總總協定，包括 http, ftp, ssh, telnet 等等服務所定義的 port number

    */etc/protocols 定義出 IP 封包協定的相關資料

    */etc/init.d/network restart 一口氣重新啟動整個網路的參數

    *ifup eth0 (ifdown eth0) 啟動或者是關閉某張網路介面

 *連上 Internet 的方法

  *固定 IP 上網方式

   *修改主機名稱： /etc/sysconfig/network

   *設定網路參數： /etc/sysconfig/network-scripts/ifcfg-eth0 看书

    *可以參考 /sbin/ifup 這個 script 的內容， 這個 script 對於每個項目的應用都記錄的挺清楚

   *啟動與關閉網卡

   *設定 DNS 的 IP： /etc/resolv.conf

   *可自動取得 IP 的環境

  *ADSL 撥接上網 看书

   *rp-pppoe 使用的是 Point to Point (ppp) 的點對點協定所產生的網路介面，因此當您順利的撥接成功之後， 會多產生一個實體網路介面『 ppp0 』

  *由於 ppp0 是架構在乙太網路上的，所以 eth0 也不能關掉

  *關閉接在 ADSL 數據機上面的那張網卡

  *設定帳號與密碼之連線設定 adsl-setup

   *ifcfg-ppp0  ：亦即是 ppp0 這個網路介面的設定檔案；

   *resolv.conf ：這個檔案會被備份後，然後以剛剛我們上面輸入的資料取代；

   *pap-secrets, chap-secrets：我們輸入的密碼就放在這裡！

  *開始撥接上網 adsl-start

  *察看 IP 啦！

  *特殊狀況

 *無線網路--以筆記型電腦為例

  *無線網路所需要的硬體

   *無線基地台 (Wireless Access Point, 簡稱 AP) 

   *安裝在電腦主機上面的無線網卡

  *網路安全方面 看书

   *關於 ESSID/SSID 

    *每部 AP 都會有一個連線的名字，那就是 ESSID ，這個 ESSID 可以提供給 client 端， 當 client 端需要進行無線連線時，他必須要說明他要利用哪一部 AP 

  *開始連線

   *取得驅動程式並實際安裝

   *測試模組，並且對應網路卡與模組：(modprobe 與 iwconfig)

   *利用 iwlist 偵測 AP

   *設定網路卡設定檔 (ifcfg-ethn)

   *啟動與觀察無線網卡

 *常見問題說明 看书

  *內部網域使用某些連線服務(如 FTP, POP3)所遇到的連線延遲問題

  *網址列無法解析問題

  *預設路由的問題

   *default gateway 應該只能有一個

==== Linux 常用網路指令介紹 =====

 *網路參數設定指令

  *ifconfig

   *可以透過 eth0:0 這種虛擬的網路介面來設定好一張網路卡上面的多個 IP

   *要啟動某個網路介面，但又不讓他具有 IP 參數時，直接給他 ifconfig eth0 up 即可

  *ifup, ifdown

   *直接以設定檔， 亦即是在 /etc/sysconfig/network-scripts 裡面的 ifcfg-ethx 等檔案的設定參數來啟動

   *兩支程式其實是 script 而已

   *如果以 ifconfig eth0 .... 來設定或者是修改了網路介面後， 那就無法再以 ifdown eth0 的方式來關閉 應該要以 ifconfig eth0 down 才能夠關閉該介面喔

  *路由修改 route

   *依序是由小網域 逐漸到大網域最後則是預設路由

   *路由是依照順序來排列與傳送的

   *在一部主機上面設定兩個相同網域的 IP 本身沒有什麼意義

   *當出現『SIOCADDRT: Network is unreachable』 這個錯誤時，肯定是由於 gw 後面接的 IP 無法直接與您的網域溝通 (Gateway 並不在你的網域內)

  *ip

   *sbin/ifup 就是利用 ip 這個指令來達成

   *關於裝置介面 (device) 的相關設定： ip link 

    *可以更改『網路卡代號、 MAC 位址的資訊』

   *關於額外的 IP 相關設定： ip address 

    *可以新增虛擬的網路介面

   *關於路由的相關設定： ip route 

    *可以進行額外的參數設計，例如 MTU 的規劃

   *有興趣的話，也可以自行參考 ethtool 這個指令

  *iwlist, iwconfig

   *必須要有無線網卡才能夠進行

  *dhclient

   *真正發送 dhcp 要求工作的程式

   * dhcpcd 這支程式，與 dhclient 是相同

 *網路偵錯與觀察指令

  *ping

   *TTL (Time To Live) 

   *用 ping 追蹤最大 MTU 數值

  *traceroute

   *這個指令會針對欲連接的目的地之所有 router 進行 ICMP 的逾時等待

   *有些防火牆或者主機可能會將 ICMP 可通過的權力拿掉，因此就會造成等不到回聲的狀態

   *有些 gateway 本來就不支援 traceroute 的功能

  *netstat

   *觀察網路的連線狀態

   *觀察『我目前開了多少的 port 在等待用戶端的連線』 netstat -tulnp

   *觀察『目前我的網路連線狀態中，有多少連線已建立或產生問題』 netstat -atunp

   * Unix socket 通常是用在一些僅在本機上運作的程式所開啟的插槽介面檔

  *host

   *查出某個主機名稱的 IP

  *nslookup

   *可以由 IP 找出主機名稱

   *目前大家都建議使用 dig 這個指令來取代 nslookup 

 *遠端連線指令

  *telnet

   *不但可以直接連接到伺服器上頭，還可以用來連結 BBS 

   *Linux 上的 telnet 軟體還提供了 Kerberos 的認證方式

   *可以用來連結到某個 port (服務) 上頭

  *ftp

   *FTP 其實算是一個很麻煩的協定，因為他使用兩個 port 分別進行命令與資料的交流

  *lftp

   *早期當我們要登入提供匿名登入的主機時，很多時候都是使用 ncftp 這個軟體， 不過，現在有更棒的選擇，那就是 lftp 

   *圖形介面的 gftp 

  *gaim

   *MSN 或 Yahoo 即時通 即時通訊工具

 *文字介面網頁瀏覽

  *lynx

   *查閱 Linux 本機上面以 HTML 語法寫成的文件資料 (document)

   *設定檔 /etc/lynx.cfg  設定语系

  *wget

   *進行『網頁資料的取得』

   *設定檔: /etc/wgetrc

   *可以透過 proxy 來下載資料

  *封包擷取功能

   *截包和抓包是不一样的概念

   *tcpdump

    *其實就是個駭客軟體

    *執行 tcpdump 時網路介面會啟動在 『錯亂模式 (promiscuous)』

    *有助於我們瞭解到封包的運作，同時瞭解到主機的防火牆設定規則是否有需要修訂的地方。

   *ethereal

    *ethereal 分為文字介面與圖形介面，文字介面的用法與 tcpdump 相當的類似，不過他的指令名稱為 tethereal 

   *nc, netcat

    *可以用來作為某些服務的檢測，因為他可以連接到某個 port 來進行溝通， 此外，還可以自行啟動一個 port 來傾聽其他用戶的連線

    *編譯的時候給予『GAPING_SECURITY_HOLE』參數的話，可以用來取得用戶端的 bash 能夠用來作為駭客軟體

    *可用来建立链接

    *用途: /usr/share/doc/nc-1.10/scripts 目錄下的 script 

==== Linux 網路偵錯 ====

 *無法連線原因分析 看书

　*硬體問題

　*軟體問題

　*問題的處理

 *處理流程

  1. 網路卡工作確認

  1. 區域網路內各項連接設備檢測

  1. 取得正確的 IP 參數

  1. 確認路由表的規則

  1. 主機名稱與 IP 查詢的 DNS 錯誤

  1. Linux 的 NAT 伺服器或 IP 分享器出問題

  1. Internet 的問題

  1. 步驟八：主機的問題
