= Linux学习计划 =
== 操作 ==
 *Bochs的安装和使用 [[http://osfromscratch.org/bookscn/7-achapter02cn|搭建工作环境]]
 *系统管理 命令 配置文件 脚本文件
 *安装x window
 *bash 使用与编程 参考[[Advanced Bash-Scripting Guide]]
 *熟悉Emacs 或 VIM
== 应用编程 ==
 *API
  *基本API [[Unix/Linux编程实践教程|UULP]]里涉及的那些
  *图形 
  *网络
== 内核 ==
 *[[自己动手写操作系统]]里的内核可以用来熟悉硬件, 和编写方法
 *早期内核 [[Linux内核完全剖析-基于0.12内核|0.12]] 开始逐步的深入的理解
 *现在
== 思想 ==
 *命令行和窗口
 *和windows的不同
 *x windows 和 内核的关系
== 驱动 ==
 *[[Understanding the Linux Kernel|LDD]]学习
 *搞懂linux模块
 *char驱动
 *实现read, write, ioctl, polling等各种函数的驱动
 *block驱动
 *了解内存管理
 *明白各种memory alloc的函数实现细节。这是linux开发的基本功
 *学习锁机制的应用，这个不是最难的但是最容易犯错的，涉及到很多同步和并发的问题。
 *看内核中实际应用的驱动代码。 你会发现最基本的你已经知道了， 大的框架都是一样的， 无非是read, write, ioctl等函数的实现， 但里面包含了很多很多细小的实现细节是之前不知道的。 这时候就要考虑到很多别的问题而不仅仅是基本功能的实现。 推荐您看2.6.20中integrated的一个驱动 kvm， 记得是在driver/lguest下，很好玩的， 就是linux下的虚拟机驱动， 代码不长，但功能强大。有能力的可以自己写一操作系统按照要求做成磁盘镜像加载到虚拟机中， 然后客户机可以有自己的4G虚拟地址空间。
 *内核学习
== misc ==
 *源代码获取 代码盘
 *了解[[www.linuxdoc.org]]
== 参考 ==
 *[[http://www.cnblogs.com/zzsbest/archive/2008/07/21/1247426.html]]
