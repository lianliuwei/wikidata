= Core Python Programming =
 *看到 79
 *做练习
== 欢迎来到Python世界 ==
 *.py是Python的扩展名
 *.pyc .pyo是编译完的文件
 *#!/bin/env python 可以用于选择python的位置，不知这是什么原理
 *标准版本的 Python 是用 C 来编译的， 又叫 CPython
 *Stackless
== Python起步 ==
 *分语句和表达式
 *使用空格当做代码块
 *print后加，表示不换行 但是会自动添加空格
 *Python Enhancement Proposal
== Python基础 ==
 * 继续( \ )，也有不用就可以直接换行的语句
 *复合语句首行以关键字开始，以冒号( : )结束
 *代码组由不同的缩进分隔
 *没有缩进的代码块是最高层次的，别称做脚本的“main”部分
 *同一行书写多个语句(;)
 *每一个 Python 脚本文件都可以被当成是一个模块
 *赋值语句不会返回值 但是 链式赋值没问题
 *对象是通过引用传递的
 *Python 不支持类似 x++ 或 --x 这样的前置/后置自增/自减运算
 *“多元”赋值
 *多元赋值方式可以实现无需中间变量交换两个变量的值
  *_xxx    不用'from module import *'导入  私有的
  * __xxx__系统定义名字 
  *__xxx   类中的私有变量名
 *可以用属性 obj.__doc__来访问标准注释
 *大部分的Python 模块都是用于导入调用的，直接运行模块 应该调用该模块的回归测试代码。 
 *如果模块是被导入， __name__ 的值为模块名字  如果模块是被直接执行， __name__ 的值为 '__main__'
 *在主程序中放置测试代码是测试模块的简单快捷的手段。
 *unittest 模块， 有时候它被称为 PyUnit, 是一个测试框架。大系统的组件进行正规系统的回规测试可以使用
 *变量和内存管理
  *变量无须指定类型 
  *程序员不用关心内存管理 
  *变量名会被“回收” 
  *del 语句能够直接释放资源
 *使用引用就不会造成C中指针的空指针和引用在对象被删除的情况
 *技巧：使用局部变量替换模块变量
 *异常处理最适用的场合，是在没有合适的函数处理异常状况的时候
 *Debugger: pdb 
 *Logger: logging 
 *Profilers: profile, hotshot, cProfile 
 *[[http://www.china-pub.com/39969|目录]]
